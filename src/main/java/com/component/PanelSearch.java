package com.component;

import com.event.ItemEvent;
import com.model.Product;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author Cristian
 * Clase de componente que contendra otros componentes que son
 * los items de busqueda (SearchItem)
 */
public class PanelSearch extends javax.swing.JPanel {

    /**
     * itemEvent: variable que contiene funciones que se ejecutan cuando ocurren ciertos eventos
     */
    
    private ItemEvent itemEvent;
    
    /**
     * Creates new form PanelSearch
     */
    public PanelSearch() {
        initComponents();
        searchContent.setLayout(new MigLayout("fillx", "0[]0", "0[]0"));
    }
    
    //* Añade el itemEvent a esta clase para ser usado con los items
    public void addItemEvent(ItemEvent itemEvent) {
        this.itemEvent = itemEvent;
    }
    
    //* Cambia la lista de Productos semejantes a la busqueda
    public void setListProductSearch(List<Object[]> listProductAndSelected) {
        searchContent.removeAll();
        
        for(Object[] data: listProductAndSelected) {
            SearchItem item = new SearchItem((Product) data[0], (boolean) data[1]);
            
            item.addEvent(new ActionListener() {
                
                @Override //* Cuando un item es Clickeado se le activa el evento
                public void actionPerformed(ActionEvent ae) {
                    itemEvent.onClick((Product) data[0]);
                }
            });
            
            searchContent.add(item, "wrap");
        }
        
        // Cambiar el tamaño del panel de acuerdo a la cantidad de items que se este mostrando
        int count = getItemSize();
        
        if(count <= 5) {
            setPreferredSize(new Dimension(getPreferredSize().width, count * 36));
        } else setPreferredSize(new Dimension(getPreferredSize().width, 200));
        
        searchContent.setPreferredSize(new Dimension(searchContent.getPreferredSize().width, count * 36 ));
        
        repaint();
        revalidate();
    }
    
    //* Obtener la cantidad de items que se encuentran en el componente
    public int getItemSize() {
        return searchContent.getComponentCount();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scroll = new com.component.complement.ScrollPaneWin11();
        searchContent = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(32767, 200));

        scroll.setBorder(null);
        scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scroll.setMinimumSize(new java.awt.Dimension(100, 40));

        searchContent.setMinimumSize(new java.awt.Dimension(100, 40));
        searchContent.setPreferredSize(new java.awt.Dimension(334, 198));

        javax.swing.GroupLayout searchContentLayout = new javax.swing.GroupLayout(searchContent);
        searchContent.setLayout(searchContentLayout);
        searchContentLayout.setHorizontalGroup(
            searchContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 336, Short.MAX_VALUE)
        );
        searchContentLayout.setVerticalGroup(
            searchContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        scroll.setViewportView(searchContent);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scroll;
    private javax.swing.JPanel searchContent;
    // End of variables declaration//GEN-END:variables
}
